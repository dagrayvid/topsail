apiVersion: serving.kserve.io/v1alpha1
kind: ServingRuntime
metadata:
  name: {{ kserve_deploy_model_serving_runtime_name }}
  namespace: {{ kserve_deploy_model_namespace }}
  labels:
    opendatahub.io/dashboard: "true"
  annotations:
    opendatahub.io/template-display-name: "Caikit/TGis ServingRuntime for {{ kserve_deploy_model_serving_runtime_name }} | Topsail"
spec:
  containers:
{% if kserve_deploy_model_sr_merge_containers == false %} # 2-container architecture
  - name: kserve-container
    image: {{ kserve_deploy_model_sr_kserve_image }}
    command: [bash, -cex]
    args:
    - |
      echo 'Starting kserver (TGIS) {% if kserve_deploy_model_sr_mute_logs %} without {% else %} _with_ {% endif %} stdout logs ...'
      exec text-generation-launcher --model-name=/mnt/models/artifacts/ {% if kserve_deploy_model_sr_mute_logs %} > /tmp/tgis-logs {% endif %}

    env:
    - name: TRANSFORMERS_CACHE
      value: /shared_model_storage/transformers_cache
{% for env_key, env_value in kserve_deploy_model_sr_kserve_extra_env_values.items() %}
    - name: "{{ env_key }}"
      value: "{{ env_value }}"
{% endfor %}

{% if kserve_deploy_model_secret_env_file_name is not none %}
    envFrom:
    - secretRef:
        name: {{ kserve_deploy_model_serving_runtime_name }}-secret
{% endif %}

    resources:
      requests:
        cpu: "{{ kserve_deploy_model_sr_kserve_resource_request.cpu }}"
        memory: "{{ kserve_deploy_model_sr_kserve_resource_request.memory }}Gi"
{% if kserve_deploy_model_sr_kserve_resource_request['nvidia.com/gpu'] %}
        nvidia.com/gpu: "{{ kserve_deploy_model_sr_kserve_resource_request['nvidia.com/gpu'] }}"
{% endif %}
      limits:
{% if kserve_deploy_model_limits_equals_requests %}
        cpu: "{{ kserve_deploy_model_sr_kserve_resource_request.cpu }}"
        memory: "{{ kserve_deploy_model_sr_kserve_resource_request.memory }}Gi"
{% endif %}
{% if kserve_deploy_model_sr_kserve_resource_request['nvidia.com/gpu'] %}
        nvidia.com/gpu: "{{ kserve_deploy_model_sr_kserve_resource_request['nvidia.com/gpu'] }}"
{% endif %}
    volumeMounts:
    - mountPath: /shared_model_storage/transformers_cache
      name: cache-volume
  # ---
  # --- transformer-container
  # ---
  - name: transformer-container
    image: {{ kserve_deploy_model_sr_transformer_image }}
    ports:
    - containerPort: 8085
      name: h2c
      protocol: TCP
    env:
{% for env_key, env_value in kserve_deploy_model_sr_transformer_extra_env_values.items() %}
    - name: "{{ env_key }}"
      value: "{{ env_value }}"
{% endfor %}
{% for env_key, env_value in kserve_deploy_model_sr_kserve_extra_env_values.items() %}
    - name: "{{ env_key }}"
      value: "{{ env_value }}"
{% endfor %}
{% if kserve_deploy_model_secret_env_file_name is not none %}
    envFrom:
    - secretRef:
        name: {{ kserve_deploy_model_serving_runtime_name }}-secret
{% endif %}
    resources:
      requests:
        cpu: "{{ kserve_deploy_model_sr_transformer_resource_request.cpu }}"
        memory: "{{ kserve_deploy_model_sr_transformer_resource_request.memory }}Gi"
      limits:
{% if kserve_deploy_model_limits_equals_requests %}
        cpu: "{{ kserve_deploy_model_sr_transformer_resource_request.cpu }}"
        memory: "{{ kserve_deploy_model_sr_transformer_resource_request.memory }}Gi"
{% endif %}
    volumeMounts:
    - name: config
      mountPath: /caikit/config/
      readOnly: true
{% if kserve_deploy_model_sr_shared_memory %}
    - name: shared-memory
      mountPath: /dev/shm
{% endif %}
{% else %} # 1-container architecture
  - name: kserve-container
    image: quay.io/opendatahub/caikit-tgis-serving:stable
    command: [bash, -cex]
    args:
    - |
{% if kserve_deploy_model_sr_mute_logs %}
      echo "Starting Caikit-serving without stdout logs ..."
{% else %}
      echo "Starting Caikit-serving _with_ stdout logs ..."
{% endif %}
      TGIS_CONFIG_TEMPLATE="/caikit/config/caikit-tgis.template.yml"
      EXTENDED_TIMEOUT=20000
      sed -i 's/load_timeout: .*/load_timeout: '$EXTENDED_TIMEOUT'/' $TGIS_CONFIG_TEMPLATE
      exec ./start-serving.sh {% if kserve_deploy_model_sr_mute_logs %} > /tmp/tgis-caikit-logs {% endif %}

    env:
    - name: RUNTIME_LOCAL_MODELS_DIR
      value: /mnt/models
    - name: TRANSFORMERS_CACHE
      value: /shared_model_storage/transformers_cache
    - name: HUGGINGFACE_HUB_CACHE
      value: /shared_model_storage/transformers_cache
{% for env_key, env_value in kserve_deploy_model_sr_kserve_extra_env_values.items() %}
    - name: "{{ env_key }}"
      value: "{{ env_value }}"
{% endfor %}
{% for env_key, env_value in kserve_deploy_model_sr_transformer_extra_env_values.items() %}
    - name: "{{ env_key }}"
      value: "{{ env_value }}"
{% endfor %}

{% if kserve_deploy_model_secret_env_file_name is not none %}
    envFrom:
    - secretRef:
        name: {{ kserve_deploy_model_serving_runtime_name }}-secret
{% endif %}

    resources:
      requests:
        cpu: "{{ kserve_deploy_model_sr_kserve_resource_request.cpu }}"
        memory: "{{ kserve_deploy_model_sr_kserve_resource_request.memory }}Gi"
{% if kserve_deploy_model_sr_kserve_resource_request['nvidia.com/gpu'] %}
        nvidia.com/gpu: "{{ kserve_deploy_model_sr_kserve_resource_request['nvidia.com/gpu'] }}"
{% endif %}
      limits:
{% if kserve_deploy_model_limits_equals_requests %}
        cpu: "{{ kserve_deploy_model_sr_kserve_resource_request.cpu }}"
        memory: "{{ kserve_deploy_model_sr_kserve_resource_request.memory }}Gi"
{% endif %}
{% if kserve_deploy_model_sr_kserve_resource_request['nvidia.com/gpu'] %}
        nvidia.com/gpu: "{{ kserve_deploy_model_sr_kserve_resource_request['nvidia.com/gpu'] }}"
{% endif %}
    ports:
    - containerPort: 8085
      name: h2c
      protocol: TCP
    volumeMounts:
    - name: cache-volume
      mountPath: /shared_model_storage/transformers_cache
    - name: config
      mountPath: /etc/not_used/caikit-tgis.yml # only use the one shipped with the container
{% if kserve_deploy_model_sr_shared_memory %}
    - name: shared-memory
      mountPath: /dev/shm
{% endif %}
{% endif %}
  volumes:
  - name:  cache-volume
    emptyDir:
      sizeLimit: 180Gi
  - name: config
    configMap:
      name: {{ kserve_deploy_model_serving_runtime_name }}-caikit-tgis-config
{% if kserve_deploy_model_sr_shared_memory %}
  - name: shared-memory
    emptyDir:
      medium: Memory
      sizeLimit: 2Gi
{% endif %}
  multiModel: false
  supportedModelFormats:
  # Note: this currently *only* supports caikit format models
  - autoSelect: true
    name: caikit
